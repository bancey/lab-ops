trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - terraform
      - ansible
      - pipelines/terraform-*.yaml
      - pipelines/ansible-*.yaml
      - infra-pipeline.yaml

pr:
  - master

parameters:
  - name: local_environments
    type: object
    default:
      - name: wanda
        address: "wanda.heimelska.co.uk"
      - name: thanos
        address: "thanos.heimelska.co.uk"
      - name: hela
        address: "hela.heimelska.co.uk"
      - name: loki
        address: "loki.heimelska.co.uk"
      - name: thor
        address: "thor.heimelska.co.uk"
  - name: terraform_deployments
    type: object
    default:
      - deployment: virtual_machines
        environment: prod
        component: virtual-machines
        serviceConnection: "MSDN Sub"
        storageAccount: wanda1a85dd9018454b4
        extraCommandArgs: -var "target_nodes=[\"wanda\"]"
        destroy: false
        deploy: true
        localEnvironments:
          - wanda
        dependsOn: []
      - deployment: tiny_virtual_machines
        environment: prod
        component: virtual-machines
        serviceConnection: "MSDN Sub"
        storageAccount: tiny523c690a628b4700
        extraCommandArgs: -var "target_nodes=[\"hela\",\"loki\",\"thor\"]"
        destroy: false
        deploy: true
        localEnvironments:
          - hela
          - loki
          - thor
        dependsOn: []
      - deployment: k8s_infra
        environment: prod
        component: kubernetes
        serviceConnection: "MSDN Sub"
        storageAccount: wanda1a85dd9018454b4
        destroy: false
        deploy: false
        localEnvironments:
          - wanda
        dependsOn: []
      - deployment: prod_dns
        environment: prod
        component: dns
        serviceConnection: "MSDN Sub"
        storageAccount: dns175090c1a7c944d1
        destroy: false
        deploy: true
        dependsOn: []
      - deployment: test_gameserver
        environment: test
        component: gameserver
        serviceConnection: "MSDN Sub"
        storageAccount: gamec96560353b1a4d1a
        destroy: false
        deploy: true
        dependsOn: []
      - deployment: prod_gameserver
        environment: prod
        component: gameserver
        serviceConnection: "MSDN Sub"
        storageAccount: gamec96560353b1a4d1a
        destroy: false
        deploy: true
        dependsOn:
          - test_gameserver
      - deployment: prod_twingate
        environment: prod
        component: twingate
        serviceConnection: "MSDN Sub"
        storageAccount: twingate959ba0d66209
        destroy: false
        deploy: true
        dependsOn: []

variables:
  - name: agentImage
    value: ubuntu-latest

stages:
  - stage: CheckHostsOnline
    dependsOn: []
    jobs:
      - ${{ each env in parameters.local_environments }}:
          - job: CheckHostIsOnline_${{ env.name }}
            pool:
              vmImage: $(agentImage)
            steps:
              - template: pipelines/connect.yaml
                parameters:
                  keyVaultName: bancey-vault
                  serviceKeySecretName: Twingate-AzureDevOps-SA-Key
                  serviceConnection: MSDN Sub
              - template: pipelines/check-host-online.yaml
                parameters:
                  addresses: ${{ env.address }}
  - ${{ each deployment in parameters.terraform_deployments }}:
      - stage: ${{ deployment.deployment }}
        ${{ if and(deployment.localEnvironments, gt(length(join('', deployment.dependsOn)), 0)) }}:
          dependsOn: ${{ split(format('{0},{1}', join(',', deployment.dependsOn), 'CheckHostsOnline'), ',') }}
        ${{ elseif deployment.localEnvironments }}:
          dependsOn: CheckHostsOnline
        ${{ else }}:
          dependsOn: ${{ deployment.dependsOn }}
        ${{ if deployment.localEnvironments }}:
          condition: and(succeeded(), eq(stageDependencies.CheckHostsOnline.outputs['CheckHostIsOnline_${{ deployment.localEnvironments[0] }}.checkOnline.online'], 'true'))
        ${{ else }}:
          condition: succeeded()
        jobs:
          - job: TerraformPlanApply
            pool:
              vmImage: $(agentImage)
            steps:
              - ${{ if deployment.localEnvironments }}:
                - template: pipelines/connect.yaml
                  parameters:
                    keyVaultName: bancey-vault
                    serviceKeySecretName: Twingate-AzureDevOps-SA-Key
                    serviceConnection: MSDN Sub
              - template: pipelines/terraform-init.yaml
                parameters:
                  storageAccount: ${{ deployment.storageAccount}}
                  workingDirectory: $(System.DefaultWorkingDirectory)/terraform/components/${{ deployment.component }}
                  azureRmKey: ${{ deployment.deployment }}
              - template: pipelines/terraform-plan.yaml
                parameters:
                  serviceConnection: ${{ deployment.serviceConnection }}
                  workingDirectory: $(System.DefaultWorkingDirectory)/terraform/components/${{ deployment.component }}
                  variableFilePath: $(System.DefaultWorkingDirectory)/terraform/environments/${{ deployment.environment }}/${{ deployment.environment }}.tfvars
                  ${{ if ne(deployment.extraCommandArgs, '') }}:
                    extraCommandArgs: ${{ deployment.extraCommandArgs }}
              - ${{ if and(eq(deployment.destroy, true), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
                  - template: pipelines/terraform-destroy.yaml
                    parameters:
                      serviceConnection: ${{ deployment.serviceConnection }}
                      workingDirectory: $(System.DefaultWorkingDirectory)/terraform/components/${{ deployment.component }}
                      variableFilePath: $(System.DefaultWorkingDirectory)/terraform/environments/${{ deployment.environment }}/${{ deployment.environment }}.tfvars
              - ${{ if and(eq(deployment.deploy, true), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
                  - template: pipelines/terraform-apply.yaml
                    parameters:
                      serviceConnection: ${{ deployment.serviceConnection }}
                      workingDirectory: $(System.DefaultWorkingDirectory)/terraform/components/${{ deployment.component }}
                      variableFilePath: $(System.DefaultWorkingDirectory)/terraform/environments/${{ deployment.environment }}/${{ deployment.environment }}.tfvars
