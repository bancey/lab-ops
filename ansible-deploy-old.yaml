  #- name: ansible_deployments
  #  type: object
  #  default:
      #- deployment: k8s_ansible
      #  environment: prod
      #  envCheckStageName: CheckEnvIsOnline_wanda
      #  playbook: k3s-wanda.yaml
      #  requirementsFile: requirements.yml
      #  addresses: "10.151.15.8,10.151.15.16,10.151.15.17,10.151.15.18,10.151.15.19"
      #  deploy: false
      #  extraVars: "run_prep=true run_install=true"
      #  local: true
      #  demands:
      #    - KUBERNETES_SERVICE_HOST
      #  dependsOn:
      #    - CheckEnvIsOnline_wanda
      #    - k8s_infra
      #- deployment: nuc_k8s_ansible
      #  environment: prod
      #  playbook: k3s-nuc.yaml
      #  requirementsFile: requirements.yml
      #  addresses: "10.151.16.8,10.151.16.16,10.151.16.17"
      #  deploy: false
      #  extraVars: "run_prep=true run_install=true"
      #  local: true
      #  demands:
      #    - accessible
      #  dependsOn: []
      #- deployment: thanos_ansible
      #  environment: prod
      #  playbook: thanos.yaml
      #  addresses: "10.151.14.5"
      #  envCheckStageName: CheckEnvIsOnline_thanos
      #  local: true
      #  demands:
      #    - KUBERNETES_SERVICE_HOST
      #  dependsOn:
      #    - CheckEnvIsOnline_thanos


- ${{ if ne(deployment.playbook, '') }}:
              - ${{ if ne(deployment.addresses, '') }}:
                  - job: CheckAnsibleHostsOnline
                    ? ${{ if and(eq(deployment.local, true), ne(deployment.envCheckStageName, '')) }}
                    : condition: and(succeeded(), eq(stageDependencies.${{ deployment.envCheckStageName }}.CheckEnvIsOnline.outputs['checkOnline.online'], 'true'))
                    pool:
                      vmImage: $(agentImage)
                    steps:
                      - template: pipelines/connect.yaml
                        parameters:
                          keyVaultName: bancey-vault
                          serviceKeySecretName: Twingate-AzureDevOps-SA-Key
                          serviceConnection: MSDN Sub
                      - template: pipelines/check-host-online.yaml
                        parameters:
                          addresses: ${{ deployment.addresses }}
              - job: AnsibleCheck
                ? ${{ if and(ne(deployment.addresses, ''), ne(deployment.envCheckStageName, '')) }}
                : condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'), eq(stageDependencies.${{ deployment.envCheckStageName }}.CheckEnvIsOnline.outputs['checkOnline.online'], 'true'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
                ${{ elseif ne(deployment.addresses, '') }}:
                  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
                ${{ else }}:
                  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
                pool:
                  vmImage: $(agentImage)
                ${{ if ne(deployment.addresses, '') }}:
                  dependsOn: CheckAnsibleHostsOnline
                steps:
                  - template: pipelines/connect.yaml
                    parameters:
                      keyVaultName: bancey-vault
                      serviceKeySecretName: Twingate-AzureDevOps-SA-Key
                      serviceConnection: MSDN Sub
                  - template: pipelines/ansible-check.yaml
                    parameters:
                      hostsFilePath: ansible/hosts.yaml
                      requirementsFile: ${{ deployment.requirementsFile }}
                      playbook: ${{ deployment.playbook }}
                      workingDirectory: ${{ deployment.workingDirectory }}
                      keyVaultName: bancey-vault
                      privateKeySecretName: Packer-Private-Key
                      serviceCOnnection: MSDN Sub
                      extraVars: ${{ deployment.extraVars }}
              - ${{ if ne(deployment.deploy, false) }}:
                  - job: AnsibleRun
                    ? ${{ if and(ne(deployment.addresses, ''), ne(deployment.envCheckStageName, '')) }}
                    : condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(stageDependencies.${{ deployment.envCheckStageName }}.CheckEnvIsOnline.outputs['checkOnline.online'], 'true'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
                    ${{ elseif ne(deployment.addresses, '') }}:
                      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
                    ${{ else }}:
                      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
                    pool:
                      ${{ if eq(deployment.local, true) }}:
                        name: Local
                        ${{ if ne(deployment.demands, '') }}:
                          demands: ${{ deployment.demands }}
                      ${{ else }}:
                        vmImage: $(agentImage)
                    ${{ if ne(deployment.addresses, '') }}:
                      dependsOn: CheckAnsibleHostsOnline
                    steps:
                      - template: pipelines/ansible-run.yaml
                        parameters:
                          hostsFilePath: ansible/hosts.yaml
                          requirementsFile: ${{ deployment.requirementsFile }}
                          playbook: ${{ deployment.playbook }}
                          workingDirectory: ${{ deployment.workingDirectory }}
                          keyVaultName: bancey-vault
                          privateKeySecretName: Packer-Private-Key
                          serviceCOnnection: MSDN Sub
                          extraVars: ${{ deployment.extraVars }}