---
- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true
- name: Install required system packages
  ansible.builtin.apt:
    pkg: "{{ install_pkgs }}"
    state: latest
    update_cache: true
- name: Remove packages
  ansible.builtin.apt:
    pkg:
      - ufw
      - unattended-upgrades
    state: absent
    autoremove: true
- name: Upgrade all packages
  ansible.builtin.apt:
    name: "*"
    state: latest
- name: Get installed packages
  ansible.builtin.package_facts:
    manager: auto
- name: Remove snap packages
  ansible.builtin.command: snap remove {{ item }}
  loop: ["lxd", "core20", "snapd"]
  when: "'snapd' in ansible_facts.packages"
- name: Remove snap
  ansible.builtin.apt:
    name: snapd
    state: absent
    autoremove: true
- name: Set timezone
  community.general.timezone:
    name: "Europe/London"
- name: Disable multipathd service
  ansible.builtin.systemd:
    name: multipathd
    enabled: false
    state: stopped
    masked: true
  when: disable_multipath
- name: Reboot host if enabled
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible prep role"
    connect_timeout: 5
    reboot_timeout: "{{ reboot_timeout }}"
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_hosts
  throttle: 1
- name: Wait for host to come back online
  ansible.builtin.wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: "{{ reboot_timeout }}"
  when: reboot_hosts
  throttle: 1
