---
- name: Get dpkg arch
  shell: dpkg --print-architecture
  register: dpkg_arch
- name: Get version codename
  shell: . /etc/os-release && echo "$VERSION_CODENAME"
  register: version_codename
- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true
- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true
- name: Upgrade all packages
  apt:
    name: "*"
    state: latest
- name: Create /etc/apt/keyrings if it doesn't exist
  file:
    path: /etc/apt/keyrings
    state: directory
    owner: root
    group: root
    mode: 0775
- name: Add Docker GPG apt Key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
- name: Add Docker Repository
  apt_repository:
    repo: "deb [arch={{ dpkg_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ version_codename.stdout }} stable"
    state: present
  register: docker_repo
- name: Update apt and install docker-ce
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest
    update_cache: true
  when: not (docker_repo.changed and ansible_check_mode)
- name: Enable and start docker
  systemd:
    name: docker
    enabled: yes
  when: not (docker_repo.changed and ansible_check_mode)
