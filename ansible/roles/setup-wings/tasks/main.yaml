---
- set_fact:
    setup_certs: (cloudflare_api_token is defined) and (cloudflare_api_token|length > 0) and (domain is defined) and (domain|length > 0)
- name: Install certbot
  ansible.builtin.command: snap install --classic certbot
  become: true
  when: setup_certs
- name: Enable trust-plugin-with-root
  ansible.builtin.command: snap set certbot trust-plugin-with-root=ok
  become: true
  when: setup_certs
- name: Install certbot-dns-cloudflare
  ansible.builtin.command: snap install certbot-dns-cloudflare
  become: true
  when: setup_certs
- name: Create lets encrypt directory
  file:
    path: "/etc/letsencrypt"
    state: directory
    owner: root
    group: root
    mode: 0775
  become: true
  when: setup_certs
- name: Copy Cloudflare api token
  template:
    src: files/cloudflare.ini.j2
    dest: /etc/letsencrypt/cloudflare.ini
    owner: root
    group: root
    mode: 0600
  become: true
  when: setup_certs
- name: Run certbot
  ansible.builtin.command: certbot certonly -d {{ domain }} --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini --non-interactive --agree-tos --email abance@bancey.xyz
  become: true
  when: setup_certs
- name: Download wings
  get_url:
    url: "https://github.com/pterodactyl/wings/releases/latest/download/wings_linux_amd64"
    dest: /usr/local/bin/wings
- name: Make wings executable
  file:
    dest: /usr/local/bin/wings
    mode: u+x
  when: not ansible_check_mode
- name: Download wings systemd service
  get_url:
    url: "https://raw.githubusercontent.com/bancey/terraform-module-pterodactyl-node/develop/provision/wings.service"
    dest: /etc/systemd/system/wings.service
- name: Enable and start wings
  systemd:
    name: wings
    enabled: yes # yamllint disable-line rule:truthy
  when: not ansible_check_mode