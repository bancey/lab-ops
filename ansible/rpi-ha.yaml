- name: Update system, install docker and setup docker compose
  hosts: rpi
  serial: 1
  become: true
  become_user: root
  become_method: sudo
  gather_facts: true
  vars:
    vip: "10.151.14.4/24"
    keepalive:
      thanos:
        peers: |-
          "10.151.14.6"
        state: "MASTER"
        priority: 150
      gamora:
        peers: |-
          "10.151.14.5"
        state: "BACKUP"
        priority: 100
    twingate:
      network: "bancetech"
      thanos:
        refresh_token: "{{ lookup('ansible.builtin.file', 'Twingate-banceylab-connector-Refresh-Token') }}"
        access_token: "{{ lookup('ansible.builtin.file', 'Twingate-banceylab-connector-Access-Token') }}"
      gamora:
        refresh_token: "{{ lookup('ansible.builtin.file', 'Twingate-banceylab-connector-2-Refresh-Token') }}"
        access_token: "{{ lookup('ansible.builtin.file', 'Twingate-banceylab-connector-2-Access-Token') }}"
    bunkerweb_db_password: "{{ lookup('ansible.builtin.file', 'BunkerWeb-DB-Password') }}"
    bunkerweb_totp_secrets: "{{ lookup('ansible.builtin.file', 'BunkerWeb-TOTP-Secrets') }}"
    bunkerweb_mgmt_admin_username: "{{ lookup('ansible.builtin.file', 'BunkerWeb-MGMT-Admin-Username') }}"
    bunkerweb_mgmt_admin_password: "{{ lookup('ansible.builtin.file', 'BunkerWeb-MGMT-Admin-Password') }}"
    cloudflare_api_token: "{{ lookup('ansible.builtin.file', 'Cloudflare-Lab-API-Token') }}"
  roles:
  - role: prep
    install_pkgs: [ "apt-transport-https", "ca-certificates", "curl", "software-properties-common", "python3-pip", "virtualenv", "python3-setuptools", "python3-docker" ]
    disable_multipath: false
  - role: install-docker
  tasks:
  - set_fact:
      keepalived_pass: "{{ lookup('ansible.builtin.file', 'keepalived-pass') }}"
  - name: ensures /etc/keelalived dir exists
    file:
      path: /etc/keepalived
      state: directory
  - name: Copy KeepAlived configuration template
    template:
      src: templates/keepalived.conf.j2
      dest: /etc/keepalived/keepalived.conf
  - name: Update apt and install keepalived
    apt:
      pkg:
      - keepalived
      - libipset13
      state: latest
      update_cache: true
    when: not ansible_check_mode
  - name: create config directories
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 775
    loop:
    - /opt/adguard
    - /opt/adguard/config
    - /opt/adguard/work
    - /opt/portainer
    - /opt/compose
    - /opt/gatus/config
    - /opt/gatus/data
    - /opt/alloy
    - /opt/alloy/config
  - name: Copy Gatus configuration file
    copy:
      src: ./templates/gatus-config.yaml
      dest: /opt/gatus/config/config.yaml
  - name: Copy Alloy configuration file
    template:
      src: ./templates/alloy-config.alloy.j2
      dest: /opt/alloy/config/config.alloy
  - name: Copy docker-compose config template
    template:
      src: ./templates/rpi-docker-compose.yaml.j2
      dest: /opt/compose/docker-compose.yaml
  - name: deploy Docker Compose stack
    community.docker.docker_compose_v2:
      project_src: /opt/compose
      files:
      - docker-compose.yaml
    register: output
    when: not ansible_check_mode
