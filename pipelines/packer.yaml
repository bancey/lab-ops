parameters:
  - name: packerVarsFile
    type: string
  - name: packerConfigFile
    type: string
  - name: keyVaultName
    type: string
  - name: serviceConnection
    type: string
  - name: extraVars
    type: string
    default: ''
  - name: configFiles
    type: object
    default: []
  - name: runBuild
    type: boolean
    default: true

steps:
  - task: AzureKeyVault@2
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      KeyVaultName: ${{ parameters.keyVaultName }}
      SecretsFilter: "*"
      RunAsPreJob: true
  - task: AzureCLI@2
    displayName: Download Packer Private Key
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az keyvault secret download --name Packer-Private-Key --vault-name ${{ parameters.keyVaultName }} --file $(System.DefaultWorkingDirectory)/packer_private_key
  - ${{ each file in parameters.configFiles }}:
    - task: replacetokens@3
      displayName: "Populate files with values from KeyVault"
      inputs:
        targetFiles: ${{ file }}
        encoding: auto
        writeBOM: true
        actionOnMissing: fail
        keepToken: true
        tokenPrefix: $(
        tokenSuffix: )
        useLegacyPattern: false
        enableTransforms: false
        enableTelemetry: false
  - task: CmdLine@2
    displayName: Run Packer Validate
    inputs:
      ${{ if eq(parameters.extraVars, '') }}:
        script: |
          packer -version
          packer init ${{ parameters.packerConfigFile }}
          packer validate -var-file="${{ parameters.packerVarsFile }}" ${{ parameters.packerConfigFile }}
      ${{ else }}:
        script: |
          packer -version
          packer init ${{ parameters.packerConfigFile }}
          packer validate -var-file="${{ parameters.packerVarsFile }}" ${{ parameters.extraVars }} ${{ parameters.packerConfigFile }}
  - ${{ if eq(true, parameters.runBuild) }}:
    - task: CmdLine@2
      displayName: Run Packer Build
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        ${{ if eq(parameters.extraVars, '') }}:
          script: |
            packer -version
            packer init ${{ parameters.packerConfigFile }}
            packer build -var-file="${{ parameters.packerVarsFile }}" ${{ parameters.packerConfigFile }}
        ${{ else }}:
          script: |
            packer -version
            packer init ${{ parameters.packerConfigFile }}
            packer build -debug -var-file="${{ parameters.packerVarsFile }}" ${{ parameters.extraVars }} ${{ parameters.packerConfigFile }}
