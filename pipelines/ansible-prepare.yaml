parameters:
  - name: replaceTokens
    type: boolean
    default: false
  - name: keyVaultName
    type: string
  - name: privateKeySecretName
    type: string
  - name: serviceConnection
    type: string
  - name: hostsFilePath
    type: string

steps:
  - checkout: self
    submodules: true
  - ${{ if eq(parameters.replaceTokens, true) }}:
    - task: AzureKeyVault@2
      inputs:
        azureSubscription: ${{ parameters.serviceConnection }}
        KeyVaultName: ${{ parameters.keyVaultName }}
        SecretsFilter: "*"
        RunAsPreJob: false
    - task: replacetokens@3
      displayName: Populate hosts.yaml with values from KeyVault
      inputs:
        targetFiles: $(System.DefaultWorkingDirectory)/${{ parameters.hostsFilePath }}
        encoding: auto
        writeBOM: true
        actionOnMissing: fail
        keepToken: true
        tokenPrefix: $(
        tokenSuffix: )
        useLegacyPattern: false
        enableTransforms: false
        enableTelemetry: false
  - task: AzureCLI@2
    displayName: Get Ansible Private Key
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: "bash"
      scriptLocation: "inlineScript"
      inlineScript: |
        az keyvault secret download --name ${{ parameters.privateKeySecretName }} --vault-name ${{ parameters.keyVaultName }} --file $(Build.StagingDirectory)/id_rsa
        chmod 600 $(Build.StagingDirectory)/id_rsa
