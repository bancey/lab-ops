parameters:
  - name: local
    type: boolean
  - name: envCheckStageName
    type: string
    default: ''
  - name: hostAddresses
    type: string
    default: ''
  - name: hostsFilePath
    type: string
  - name: requirementsFile
    type: string
    default: ''
  - name: playbook
    type: string
  - name: workingDirectory
    type: string


steps:
  - ${{ if ne(parameters.hostAddresses, '') }}:
    - job: CheckAnsibleHostsOnline
      ${{ if and(eq(parameters.local, true), ne(parameters.envCheckStageName, '')) }}:
        condition: and(succeeded(), eq(stageDependencies.${{ parameters.envCheckStageName }}.CheckEnvIsOnline.outputs['checkOnline.online'], 'true'))
      pool:
        ${{ if eq(parameters.local, true) }}:
          name: SelfHostedDocker
        ${{ else }}:
          vmImage: $(agentImage)
      steps:
        - template: check-host-online.yaml
          parameters:
            addresses: ${{ parameters.hostAddresses }}
  - job: AnsibleCheck
    ${{ if and(ne(parameters.hostAddresses, ''), ne(parameters.envCheckStageName, '')) }}:
      condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'), eq(stageDependencies.${{ parameters.envCheckStageName }}.CheckEnvIsOnline.outputs['checkOnline.online'], 'true'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
    ${{ else if ne(parameters.hostAddresses, '') }}:
      condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
    ${{ else }}:
      condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      ${{ if eq(parameters.local, true) }}:
        name: SelfHostedDocker
      ${{ else }}:
        vmImage: $(agentImage)
    ${{ if ne(parameters.hostAddresses, '') }}:
      dependsOn: CheckAnsibleHostsOnline
    steps:
      - template: ansible-prepare.yaml
        parameters:
          replaceTokens: true
          keyVaultName: bancey-vault
          privateKeySecretName: Packer-Private-Key
          serviceConnection: MSDN Sub
          hostsFilePath: ${{ parameters.hostsFilePath }}
      - script: |
          REQUIREMENTS_FILE="${{ parameters.requirementsFile }}"
          echo "Requirements file: $REQUIREMENTS_FILE"

          if [ ! -z "$REQUIREMENTS_FILE" ]; then
            ansible-galaxy install -r $REQUIREMENTS_FILE
          fi

          ansible-playbook --syntax-check --inventory $(System.DefaultWorkingDirectory)/${{ parameters.hostsFilePath }} ${{ parameters.playbook }}
          ansible-playbook --check --inventory $(System.DefaultWorkingDirectory)/${{ parameters.hostsFilePath }} ${{ parameters.playbook }}
        displayName: Check Ansible Playbook
        ${{ if ne(parameters.workingDirectory, '') }}:
          workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.workingDirectory }}
        ${{ else }}:
          workingDirectory: $(System.DefaultWorkingDirectory)/ansible
  - job: AnsibleRun
    ${{ if and(ne(parameters.hostAddresses, ''), ne(parameters.envCheckStageName, '')) }}:
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(stageDependencies.${{ parameters.envCheckStageName }}.CheckEnvIsOnline.outputs['checkOnline.online'], 'true'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
    ${{ else if ne(parameters.hostAddresses, '') }}:
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(dependencies.CheckAnsibleHostsOnline.outputs['checkOnline.online'], 'true'))
    ${{ else }}:
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      ${{ if eq(parameters.local, true) }}:
        name: SelfHostedDocker
      ${{ else }}:
        vmImage: $(agentImage)
    ${{ if ne(parameters.hostAddresses, '') }}:
      dependsOn: CheckAnsibleHostsOnline
    steps:
      - template: ansible-prepare.yaml
        parameters:
          replaceTokens: true
          keyVaultName: bancey-vault
          privateKeySecretName: Packer-Private-Key
          serviceConnection: MSDN Sub
          hostsFilePath: ${{ parameters.hostsFilePath }}
      - script: |
          REQUIREMENTS_FILE="${{ parameters.requirementsFile }}"
          echo "Requirements file: $REQUIREMENTS_FILE"

          if [ ! -z "$REQUIREMENTS_FILE" ]; then
            ansible-galaxy install -r $REQUIREMENTS_FILE
          fi

          ansible-playbook --inventory $(System.DefaultWorkingDirectory)/ansible/hosts.yaml ${{ parameters.playbook }}
        displayName: Run Ansible Playbook
        ${{ if ne(parameters.workingDirectory, '') }}:
          workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.workingDirectory }}
        ${{ else }}:
          workingDirectory: $(System.DefaultWorkingDirectory)/ansible
